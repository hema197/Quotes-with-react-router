{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","formData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCyD/BC,EArDG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,eAAC,WAAD,WACG,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAQ,wEAClC,cAAC,EAAD,UACD,uBAAMC,QAZV,WACEN,GAAc,IAWqBP,UAAWC,IAAQa,KAAMC,SAvB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzCrB,EAAMuB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe9C,UACGtB,EAAM0B,WACL,qBAAKzB,UAAWC,IAAQyB,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK3B,UAAWC,IAAQ2B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKxB,OAEtC,sBAAKR,UAAWC,IAAQ2B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKtB,OAEpC,qBAAKV,UAAWC,IAAQiC,QAAxB,SACE,wBAAQlC,UAAU,MAAMmC,QAxBhC,WACE5B,GAAc,IAuBR,kC,gBC3BK6B,UAlBE,WACb,IAAMC,EAAUC,cAChB,EAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAEpBC,qBAAU,WACM,cAAXD,GACDL,EAAQO,KAAK,aAEd,CAACF,EAAQL,IAKZ,OACE,cAAC,EAAD,CAAWZ,UAAsB,YAAXiB,EAAsBpB,WAJtB,SAAAuB,GACpBJ,EAAYI","file":"static/js/6.da3b515b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__-TvRZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__pYyIC\",\"loading\":\"QuoteForm_loading__3cAaX\",\"control\":\"QuoteForm_control__1g8zr\",\"actions\":\"QuoteForm_actions__3YFR-\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function formFucusHandler(){\n    setIsEntering(true);\n  }\n\n  function btnClickHandler(){\n    setIsEntering(false);\n  }\n\n  return (\n    <Fragment>\n       <Prompt when={isEntering} message=\"Are you sure you want to leave, all your entered data will be lost!\"/>\n       <Card>\n      <form onFocus={formFucusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn' onClick={btnClickHandler}>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n   \n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm.js'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport useHttp from '../hooks/use-http.js';\r\nimport { addQuote } from '../lib/api.js';\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n      if(status === 'completed'){\r\n        history.push('/quotes');\r\n      }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = formData => {\r\n        sendRequest(formData)\r\n    }\r\n    return(\r\n      <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n    )\r\n}\r\n\r\nexport default NewQuote;"],"sourceRoot":""}