{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","getAllComments","loadedComments","data","params","useParams","useState","isAddingComment","setIsAddingComment","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetails","getSingleQuote","loadedQuote","path","exact","to"],"mappings":"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","file":"static/js/4.65c49b71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3ierq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1n9GA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__UbIh0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3piOr\",\"loading\":\"NewCommentForm_loading__1ZtyH\",\"control\":\"NewCommentForm_control__DIAji\",\"actions\":\"NewCommentForm_actions__3FP70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3KrIK\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const {sendRequest, status, error} = useHttp(addComment)\n  const {onAddedComment} = props;\n\n  useEffect(() => {\n    if(status === 'completed' && !error){\n      onAddedComment()\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({commentData: {text: enteredText}, quoteId: props.quoteId })\n    commentTextRef.current.value = '';\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && <div className='centered'><LoadingSpinner/></div>}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentList from '../comments/CommentsList.js';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const {sendRequest, status, data: loadedComments} = useHttp(getAllComments);\n  const params = useParams();\n  const {quoteId} = params;\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n  \n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if(status === 'pending'){    \n    comments =  <div className='centered'>\n        <LoadingSpinner/>\n      </div>   \n  }\n\n  if(status === 'completed' && (loadedComments && loadedComments.length>0)){\n    comments = <CommentList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className='centered'>No comments were added yet! </p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Route, useParams, Link } from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\nimport Comments from '../components/comments/Comments.js';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote.js';\r\nimport useHttp from \"../hooks/use-http.js\";\r\nimport { getSingleQuote } from \"../lib/api.js\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner.js\";\r\n\r\n// const DUMMY_QUOTES = [\r\n//   {id: 'q1', author: 'Max', text: 'Learning React'},\r\n//   {id: 'q2', author: 'Maksim', text: 'Learning React is fun!'},\r\n// ]\r\n\r\n\r\nconst QuoteDetails = () => {\r\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n    const params = useParams();\r\n    const id = params.quoteId;\r\n    \r\n    useEffect(() => {\r\n     sendRequest(id)\r\n    }, [sendRequest, id])\r\n    \r\n    if(status=== 'pending'){\r\n      return(\r\n        <LoadingSpinner/>\r\n      )\r\n    }\r\n\r\n    if(error){\r\n      return(\r\n          <p className=\"centered\">{error}</p>\r\n      )\r\n    }\r\n\r\n    if(status === 'completed' && !loadedQuote.text){\r\n      return(\r\n        <p>No quote found!</p>\r\n      )\r\n    }\r\n    return(\r\n      <Fragment>\r\n          <HighlightedQuote author={loadedQuote.author} text={loadedQuote.text}/>\r\n           <Route path={`/quotes/${params.quoteId}`} exact>\r\n            <div className=\"centered\">\r\n              <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>Load Comments</Link>\r\n            </div>\r\n            </Route>\r\n         \r\n         <Route path={`/quotes/${params.quoteId}/comments`}>\r\n           <Comments />\r\n         </Route>\r\n      </Fragment>\r\n   \r\n    )\r\n}\r\n\r\nexport default QuoteDetails;"],"sourceRoot":""}