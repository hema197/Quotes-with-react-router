{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortedAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCkCSC,EA9BG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAEXC,EAAgD,QADlC,IAAIC,gBAAgBH,EAASI,QACXC,IAAI,QACpCC,GAfYV,EAecT,EAAMS,OAfZC,EAeoBK,EAdvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAgBxC,OACE,eAAC,WAAD,WACE,qBAAMN,UAAWC,IAAQqB,QAAzB,SACE,wBAAQC,QANQ,WACpBb,EAAQc,KAAR,uBAA6BV,EAAoB,OAAS,SAKtD,wBAAyCA,EAAoB,aAAe,iBAE9E,oBAAId,UAAWC,IAAQwB,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVF,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMrB,a,yCCrBRsB,EAXO,WACpB,OACE,sBAAK5B,UAAWC,IAAQ4B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM7B,UAAU,MAAMK,GAAG,aAAzB,6BCqCSyB,UApCG,WACd,MAAyDC,YAAQC,KAAc,GAAxEC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAAcC,EAAlC,EAA4BC,KAAoBC,EAAhD,EAAgDA,MAMhD,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEQ,YAATC,EAEG,qBAAKlC,UAAU,WAAf,SACI,cAACuC,EAAA,EAAD,MAKPF,EAEK,qBAAKrC,UAAU,mBAAf,SACE,4BAAIqC,MAKA,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAO3D,cAAC,EAAD,CAAWhC,OAAQ2B,IALd,cAAC,EAAD","file":"static/js/5.249ab78e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__gITB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2ROTm\",\"sorting\":\"QuoteList_sorting__2pQI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__c0P89\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortedAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortedAscending);\n\n\n  const sortTheQuotes = () => {\n    history.push(`/quotes?sort=${isSortedAscending ? 'desc' : 'asc'}`);\n  }\n  return (\n    <Fragment>\n      <div  className={classes.sorting}>\n        <button onClick={sortTheQuotes}>{`Sort ${isSortedAscending ? 'Descending' : 'Ascending'}`}</button>\n      </div>   \n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/newQuotes'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../components/quotes/QuoteList.js'\r\nimport useHttp from '../hooks/use-http.js'\r\nimport { getAllQuotes } from '../lib/api.js'\r\nimport { useEffect } from 'react'\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner.js'\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound.js'\r\n\r\n\r\nconst AllQuotes = () => {\r\n    const {sendRequest, status, data: loadedQuotes, error} = useHttp(getAllQuotes, true);\r\n    \r\n    useEffect(() => {\r\n      sendRequest();  \r\n    }, [sendRequest])\r\n\r\n    if(status==='pending'){\r\n        return(\r\n          <div className='centered'>\r\n              <LoadingSpinner/>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    if(error){\r\n        return(\r\n            <div className='centered focused'>\r\n              <p>{error}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n        return(\r\n          <NoQuotesFound/>\r\n        )\r\n    }\r\n\r\n    return(\r\n     <QuoteList quotes={loadedQuotes}/>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AllQuotes;"],"sourceRoot":""}